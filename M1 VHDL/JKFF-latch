----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 2023/10/27 06:06:11
-- Design Name: 
-- Module Name: TP2ex2 - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------

--La différence entre un verrou et une bascule est qu'un verrou est déclenché par niveau (les sorties peuvent changer dès que les entrées changent)
--et que la bascule est déclenchée par front (ne change d'état que lorsqu'un signal de commande passe de haut en bas ou de bas en haut).
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity TP2ex2 is
    Port ( S : in STD_LOGIC;
           R : in STD_LOGIC;
           ini : in STD_LOGIC;
           clk : in STD_LOGIC;
           Q : out STD_LOGIC;
           Qb : out STD_LOGIC);--Qb est Q bar
end TP2ex2;

architecture Behavioral of TP2ex2 is
signal Qtemp : STD_LOGIC;
begin
bascule_process :process(S,R,clk)
    begin
    if ini = '1' then Qtemp <= '1';
    elsif(clk'event and clk = '1') then
        if R = '0' and S = '0' then Qtemp <= Qtemp;
        elsif S = '0' and R = '1' then Qtemp <='0' ;
        elsif S = '1' and R = '0' then Qtemp <='1';
        else Qtemp <= not(Qtemp);
        end if;
    end if;
end process;

Q <= Qtemp;
Qb <= not(Qtemp);
end Behavioral;
